/ Standard Instruction Set Horizontal Microcode  s.has

/ The label indicates the opcode decoded up to that point.  
/ Each hex digit in a label represents 4 bits.  0 or 1 in a 
/ label represents the bits 0 and 1.  For example, the 
/ label LF_01 corresponds to opcode bits 1111 01; the label 
/ LF_2 corresponds to opcode bits 1111 0010. 

/***************************************************************/
/     Fetch instruction and increment pc register               /
/***************************************************************/
fetch:      mar = pc; pc = pc + 1;
            rd;                   
            ir = mdr;
/***************************************************************/
/           Decode opcode                                       /
/***************************************************************/
            dc = ir; if(s) goto L1;
L0:         dc = left(dc); if (s) goto L01; 
L00:        dc = left(dc); if (s) goto L001; 
L000:       dc = left(dc); if (s) goto L0001; 
            goto L0000;
L1:         dc = left(dc); if (s) goto L11; 
L10:        dc = left(dc); if (s) goto L101; 
L100:       dc = left(dc); if (s) goto L9; 
            goto L8;
L01:        dc = left(dc); if (s) goto L011; 
L010:       dc = left(dc); if (s) goto L5; 
            goto L4;          
L11:        dc = left(dc); if (s) goto L111; 
L110:       dc = left(dc); if (s) goto LD; 
            goto LC;
L001:       dc = left(dc); if (s) goto L3; 
            goto L2;
L011:       dc = left(dc); if (s) goto L7; 
            goto L6;
L101:       dc = left(dc); if (s) goto LB; 
            goto LA;
L111:       dc = left(dc); if (s) goto LF; 
            goto LE;

LF:         dc = left(dc); if (s) goto LF_1; 
LF_0:       dc = left(dc); if (s) goto LF_01; 
LF_00:      dc = left(dc); if (s) goto LF_001; 
LF_000:     dc = left(dc); if (s) goto LF_0001;
            goto LF_0000;
LF_1:       dc = left(dc); if (s) goto LF_11; 
LF_10:      dc = left(dc); if (s) goto LF_101; 
LF_100:     dc = left(dc); if (s) goto LF_9;
            goto LF_8;
LF_01:      dc = left(dc); if (s) goto LF_011; 
LF_010:     dc = left(dc); if (s) goto LF_5;
            goto LF_4;
LF_11:      dc = left(dc); if (s) goto LF_111; 
LF_110:     dc = left(dc); if (s) goto LF_D;
            goto LF_C;
LF_001:     dc = left(dc); if (s) goto LF_3;
            goto LF_2;
LF_011:     dc = left(dc); if (s) goto LF_7;
            goto LF_6;
LF_101:     dc = left(dc); if (s) goto LF_B;
            goto LF_A;
LF_111:     dc = left(dc); if (s) goto LF_F;
            goto LF_E;

LF_F:       dc = left(dc); if (s) goto LF_F_1;
LF_F_0:     dc = left(dc); if (s) goto LF_F_01;
LF_F_00:    dc = left(dc); if (s) goto LF_F_001;
LF_F_000:   dc = left(dc); if (s) goto LF_F_0001;
            goto LF_F_0000;
LF_F_1:     dc = left(dc); if (s) goto LF_F_11
LF_F_10:    dc = left(dc); if (s) goto LF_F_101;
LF_F_100:   dc = left(dc); if (s) goto LF_F_9;
            goto LF_F_8;
LF_F_01:    dc = left(dc); if (s) goto LF_F_011;
LF_F_010:   dc = left(dc); if (s) goto LF_F_5;
            goto LF_F_4;
LF_F_11:    dc = left(dc); if (s) goto LF_F_111
LF_F_110:   dc = left(dc); if (s) goto LF_F_D;
            goto LF_F_C;
LF_F_001:   dc = left(dc); if (s) goto LF_F_3;
            goto LF_F_2;
LF_F_011:   dc = left(dc); if (s) goto LF_F_7;
            goto LF_F_6;
LF_F_101:   dc = left(dc); if (s) goto LF_F_B;
            goto LF_F_A;
LF_F_111:   dc = left(dc); if (s) goto LF_F_F;
            goto LF_F_E;

LF_F_F:     dc = left(dc); if (s) goto fetch
LF_F_F_0:   dc = left(dc); if (s) goto LF_F_F_01
LF_F_F_00:  dc = left(dc); if (s) goto LF_F_F_001
LF_F_F_000: dc = left(dc); if (s) goto LF_F_F_0001;
            goto LF_F_F_0000;
LF_F_F_001: dc = left(dc); if (s) goto LF_F_F_3
            goto LF_F_F_2; 
LF_F_F_01:  dc = left(dc); if (s) goto fetch;
LF_F_F_010: dc = left(dc); if (s) goto fetch;
            goto LF_F_F_4;

/***************************************************************/
/           Microcode for each instruction                      /
/***************************************************************/

L0000:      /------------------------- LD ----------------------
            mar = ir;
            rd; 
            ac = mdr; goto fetch; 
L0001:      /------------------------- ST -----------------------
            mar = ir; mdr = ac;
            wr; goto fetch; 
L2:         /------------------------- ADD ----------------------
            mar = ir;
            rd; 
            ac = ac + mdr; goto fetch;
L3:         /------------------------- SUB ----------------------
            mar = ir;
            rd; 
            ac = ac - mdr; goto fetch
L4:         /------------------------- LDR ----------------------
            f = ir + sp;
            mar = f; 
            rd; 
            ac = mdr; goto fetch;
L5:         /------------------------- STR ----------------------
            f = ir + sp;
            mar = f; mdr = ac; 
            wr; goto fetch:
L6:         /------------------------- ADDR ---------------------
            f = ir + sp;
            mar = f; 
            rd;
            ac = mdr + ac; goto fetch;
L7:         /------------------------- SUBR ---------------------
            f = ir + sp;
            mar = f;
            rd;
            ac = ac - mdr; goto fetch;
L8:         /------------------------- LDC ----------------------
            ac = ir & xmask; goto fetch;
L9:         /------------------------- JA -----------------------
            pc = ir & xmask; goto fetch;
LA:         /------------------------- JZOP ---------------------
            0  = ac; if (s) goto fetch;
            pc = ir & xmask; goto fetch; 
LB:         /------------------------- JN -----------------------
            0  = ac; if (s) goto dojn;
            goto fetch; 
dojn:       pc = ir & xmask; goto fetch; 
LC:         /------------------------- JZ -----------------------
            0  = ac; if (z) goto dojz;
            goto fetch; 
dojz:       pc = ir & xmask; goto fetch; 
LD:         /------------------------- JNZ ----------------------
            0  = ac; if (z) goto fetch;
            pc = ir & xmask; goto fetch; 
LE:         /------------------------- CALL ---------------------
            sp = sp - 1;
            mar = sp; mdr = pc;  
            pc = ir & xmask; wr; goto fetch; 
LF_0000:    /------------------------- RET ----------------------
            mar = sp; sp = sp + 1;
            rd;                                         
            pc = mdr; goto fetch;                       
LF_0001:    /------------------------- LDI ----------------------
            mar = ac;
            rd;
            ac = mdr; goto fetch;
LF_2:       /------------------------- STI ----------------------
            mar = sp; sp = sp + 1;
            rd;                                          
            mar = ac;                                    
            wr; goto fetch;                              
LF_3:       /------------------------- PUSH ---------------------
            sp = sp - 1;
            mar = sp; mdr = ac;                         
            wr; goto fetch;                             
LF_4:       /------------------------- POP ----------------------
            mar = sp; sp = sp + 1;
            rd;                                         
            ac = mdr; goto fetch;                       
LF_5:       /------------------------- ALOC ---------------------
            f = ir & ymask;
            sp = sp - f; goto fetch;                    
LF_6:       /------------------------- DLOC ---------------------
            f = ir & ymask;
            sp = sp + f; goto fetch;                    
LF_7:       /------------------------- SWAP ---------------------
            f = ac;
            ac = sp;                                    
            sp = f; goto fetch;                         
/***************************************************************/
/           Available Opcodes                                   /
/***************************************************************/
LF_8:       /----------------------------------------------------
LF_9:       /----------------------------------------------------
LF_A:       /----------------------------------------------------
LF_B:       /----------------------------------------------------
LF_C:       /----------------------------------------------------
LF_D:       /----------------------------------------------------
LF_E:       /----------------------------------------------------
LF_F_0000:  /----------------------------------------------------
LF_F_0001:  /----------------------------------------------------
LF_F_2:     /----------------------------------------------------
LF_F_3:     /----------------------------------------------------
LF_F_4:     /----------------------------------------------------
LF_F_5:     /----------------------------------------------------
LF_F_6:     /----------------------------------------------------
LF_F_7:     /----------------------------------------------------
LF_F_8:     /----------------------------------------------------
LF_F_9:     /----------------------------------------------------
LF_F_A:     /----------------------------------------------------
LF_F_B:     /----------------------------------------------------
LF_F_C:     /----------------------------------------------------
LF_F_D:     /----------------------------------------------------
LF_F_E:     /----------------------------------------------------
LF_F_F_0000:/----------------------------------------------------
LF_F_F_0001:/----------------------------------------------------
LF_F_F_2:   /----------------------------------------------------
LF_F_F_3:   /----------------------------------------------------
LF_F_F_4:   /----------------------------------------------------
            goto fetch;
