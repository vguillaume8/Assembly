                                                 enc.txt

                    How to Use enc Version 6.3

Quick Start 

     enc (microcode ENCrypt) encrypts microcode files.  Encrypted 
microcode files can still be used by sim, but only when the 
microlevel is disabled.  Thus, the user will not be able to use 
sim's facilities to examine the microcode. 
     To encrypt a microcode file, enter

     enc

enc then prompts the user for an input file name.  Enter the name 
of the file to encrypt and/or any other desired command line 
arguments (any number of items per input line).  Once the input 
file name is entered,  enc creates an output file containing the 
encrypted form of the input file.  The output file overwrites the 
input file unless an output file name is specified with the /o 
command line argument. 

enc will encrypt only microcode files produced by has and vas.


Command Line Arguments

     All command line arguments are optional, can be specified in 
any order, must have no embedded spaces, and must be separated by 
at least one space. 

     All command line arguments, except <infilename>, must have a 
leading "/" or "-". 

     All command line arguments are case insensitive, except for 
filenames on systems with case-sensitive filenames. 

     The format of the command line is

enc <infilename> /h  /g  /o<outfilename>
                 /?

All arguments must be separated by at least one space. 

If <infilename> is specified on the command line, then enc will 
not prompt the user for additional input.  In response to a 
prompt, the user can enter <infilename> and/or other command line 
arguments.  Prompting ends whenever the user enters <infilename>.  
If <infilename> does not have an extension, ".hor" will be 
appended to it.  If <infilename> starts with a pathname that 
starts with "/", then substitute "//" for the leading "/" in the 
pathname when entering <infilename>.  

/h or /? displays a help screen.

If /g is specified, no checking is done to determine if a file 
already exists with the same name as the output file to be 
created by enc.

The /o argument is used to specify the output file name.  If 
<outfilename> has no extension, the extension of the input file 
is used.  If the /o argument is omitted, the output file name 
defaults to the input file name (i.e., the input file is 
overwritten). 


Problem with a Leading "/" in Command Line Arguments on Non-
Microsoft Systems

     Command line arguments typically start with "/" on Microsoft 
systems, and with "-" on other systems.  For the sake of 
uniformity, all the programs in the H1 Software Package allow a 
command line argument to start with EITHER "/" or "-" on any of 
the supported platforms.  Unfortunately, allowing "/" to start a 
command line argument on non-Microsoft systems can cause a 
problem.  For example, suppose you want to specify an input file 
on the command line.  Recall that an input file argument is not 
preceded by an argument marker.  For example in, 

    sim a /ms

the argument "a" (which specifies the input file a.mac) does NOT 
have a preceding "/" or "-".  "/ms", on the other hand, has the 
argument marker "/".  "/ms" is interpreted as the "/m" argument 
followed by the secondary argument "s".  Now suppose the input 
file you want to specify on the command line is 

     /abc.x

This denotes the abc.x file in the root directory "/".  
Unfortunately, all the programs in the H1 Software Package will 
interpret a leading "/" as an argument marker rather than as the 
root directory.  Thus, 

     /abc.x

on the command line is incorrectly interpreted as the argument 

     /a 

followed by the secondary argument

     bc.x

This problem does not occur on Microsoft systems because they use 
"\" rather than "/" as the filename separator, and, thus, there 
is never any confusion with the argument marker "/". 

You will probably rarely run into this problem because full 
pathnames are rarely needed when using the programs in the H1 
Software Package.  However, if the problem does occur, it can 
easily be circumvented: simply use "//" to represent the root.  
For example, if 

     //abc.x

appears on a command line, it is interpreted as the input file

     /abc.x

Do NOT use "//" in place of "/" within a command line argument.
For example, in the following invocation of sim,

     sim a /m/mnt/floppy/s.hor

the microcode file /mnt/floppy/s.hor is specified within the /m 
command line argument.  Thus, "//" should NOT be used in place of 
the leading "/" in "/mnt/floppy/s.hor". 
